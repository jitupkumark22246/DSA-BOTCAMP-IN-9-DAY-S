#include <stdio.h>
#include <stdlib.h>

#define MAX 10 


struct Queue {
    int items[MAX];
    int front;
    int rear;
};


void initialize(struct Queue* q) {
    q->front = -1;
    q->rear = -1;
}


int isFull(struct Queue* q) {
    if ((q->front == 0 && q->rear == MAX - 1) || (q->front == q->rear + 1)) {
        return 1;
    }
    return 0;
}

int isEmpty(struct Queue* q) {
    return q->front == -1;
}


void addRequest(struct Queue* q, int floor) {
    if (isFull(q)) {
        printf("Queue is full! Cannot add more requests.\n");
    } else {
        if (q->front == -1) {
            q->front = 0;
        }
        q->rear = (q->rear + 1) % MAX;
        q->items[q->rear] = floor;
        printf("Request to floor %d added to the queue.\n", floor);
    }
}


int processRequest(struct Queue* q) {
    int floor;
    if (isEmpty(q)) {
        printf("No requests to process!\n");
        return -1;
    } else {
        floor = q->items[q->front];
        if (q->front == q->rear) {
            
            q->front = -1;
            q->rear = -1;
        } else {
            q->front = (q->front + 1) % MAX;
        }
        return floor;
    }
}


void displayRequests(struct Queue* q) {
    if (isEmpty(q)) {
        printf("No requests in the queue.\n");
    } else {
        int i = q->front;
        printf("Requests in queue: ");
        while (i != q->rear) {
            printf("%d ", q->items[i]);
            i = (i + 1) % MAX;
        }
        printf("%d\n", q->items[q->rear]);
    }
}

// Driver code
int main() {
    struct Queue q;
    initialize(&q);
    
    int choice, floor;
    
    do {
        printf("\n=== Lift Management System ===\n");
        printf("1. Add Floor Request\n");
        printf("2. Process Floor Request\n");
        printf("3. Display Current Requests\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        
        switch (choice) {
            case 1:
                printf("Enter the floor number: ");
                scanf("%d", &floor);
                addRequest(&q, floor);
                break;
            case 2:
                floor = processRequest(&q);
                if (floor != -1) {
                    printf("Lift moving to floor %d\n", floor);
                }
                break;
            case 3:
                displayRequests(&q);
                break;
            case 4:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
                break;
        }
    } while (choice != 4);
    
    return 0;
}
